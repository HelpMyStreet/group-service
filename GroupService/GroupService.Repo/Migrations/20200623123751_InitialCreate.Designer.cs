// <auto-generated />
using System;
using GroupService.Repo;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GroupService.Repo.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20200623123751_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GroupService.Repo.EntityFramework.Entities.Audit", b =>
                {
                    b.Property<int>("AuthorisedByUserId")
                        .HasColumnName("AuthorisedByUserID");

                    b.Property<int>("UserId")
                        .HasColumnName("UserID");

                    b.Property<int>("GroupId")
                        .HasColumnName("GroupID");

                    b.Property<int>("RoleId")
                        .HasColumnName("RoleID");

                    b.Property<byte>("ActionId")
                        .HasColumnName("ActionID");

                    b.Property<DateTime>("DateRequested")
                        .HasColumnType("datetime");

                    b.HasKey("AuthorisedByUserId", "UserId", "GroupId", "RoleId");

                    b.HasIndex("GroupId");

                    b.ToTable("Audit","Audit");
                });

            modelBuilder.Entity("GroupService.Repo.EntityFramework.Entities.Group", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("GroupName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<int?>("ParentGroupId");

                    b.HasKey("Id");

                    b.HasIndex("GroupName")
                        .IsUnique()
                        .HasName("UC_GroupName");

                    b.HasIndex("ParentGroupId");

                    b.ToTable("Group","Group");
                });

            modelBuilder.Entity("GroupService.Repo.EntityFramework.Entities.Role", b =>
                {
                    b.Property<int>("GroupId")
                        .HasColumnName("GroupID");

                    b.Property<int>("UserId")
                        .HasColumnName("UserID");

                    b.Property<int>("RoleId")
                        .HasColumnName("RoleID");

                    b.HasKey("GroupId", "UserId", "RoleId");

                    b.ToTable("Role","Group");
                });

            modelBuilder.Entity("GroupService.Repo.EntityFramework.Entities.UserRole", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnName("UserID");

                    b.Property<int>("RoleId")
                        .HasColumnName("RoleID");

                    b.HasKey("UserId", "RoleId");

                    b.ToTable("UserRole","User");
                });

            modelBuilder.Entity("GroupService.Repo.EntityFramework.Entities.Audit", b =>
                {
                    b.HasOne("GroupService.Repo.EntityFramework.Entities.Group", "Group")
                        .WithMany("Audit")
                        .HasForeignKey("GroupId")
                        .HasConstraintName("FK_Audit_Group");
                });

            modelBuilder.Entity("GroupService.Repo.EntityFramework.Entities.Group", b =>
                {
                    b.HasOne("GroupService.Repo.EntityFramework.Entities.Group", "ParentGroup")
                        .WithMany("InverseParentGroup")
                        .HasForeignKey("ParentGroupId")
                        .HasConstraintName("FK_Group_Group");
                });

            modelBuilder.Entity("GroupService.Repo.EntityFramework.Entities.Role", b =>
                {
                    b.HasOne("GroupService.Repo.EntityFramework.Entities.Group", "Group")
                        .WithMany("Role")
                        .HasForeignKey("GroupId")
                        .HasConstraintName("FK_Role_Group");
                });
#pragma warning restore 612, 618
        }
    }
}
